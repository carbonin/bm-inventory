// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListNodesHandlerFunc turns a function with the right signature into a list nodes handler
type ListNodesHandlerFunc func(ListNodesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListNodesHandlerFunc) Handle(params ListNodesParams) middleware.Responder {
	return fn(params)
}

// ListNodesHandler interface for that can handle valid list nodes params
type ListNodesHandler interface {
	Handle(ListNodesParams) middleware.Responder
}

// NewListNodes creates a new http.Handler for the list nodes operation
func NewListNodes(ctx *middleware.Context, handler ListNodesHandler) *ListNodes {
	return &ListNodes{Context: ctx, Handler: handler}
}

/*ListNodes swagger:route GET /nodes inventory listNodes

List OpenShift bare metal nodes

*/
type ListNodes struct {
	Context *middleware.Context
	Handler ListNodesHandler
}

func (o *ListNodes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListNodesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
