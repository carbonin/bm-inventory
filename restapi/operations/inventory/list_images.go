// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListImagesHandlerFunc turns a function with the right signature into a list images handler
type ListImagesHandlerFunc func(ListImagesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListImagesHandlerFunc) Handle(params ListImagesParams) middleware.Responder {
	return fn(params)
}

// ListImagesHandler interface for that can handle valid list images params
type ListImagesHandler interface {
	Handle(ListImagesParams) middleware.Responder
}

// NewListImages creates a new http.Handler for the list images operation
func NewListImages(ctx *middleware.Context, handler ListImagesHandler) *ListImages {
	return &ListImages{Context: ctx, Handler: handler}
}

/*ListImages swagger:route GET /images inventory listImages

List installation images

*/
type ListImages struct {
	Context *middleware.Context
	Handler ListImagesHandler
}

func (o *ListImages) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListImagesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
