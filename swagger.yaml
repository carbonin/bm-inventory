swagger: '2.0'
info:
  description: 'Bare metal inventory'
  version: 1.0.0
  title: BMInventory
host: api.openshift.com
basePath: /api/bm-inventory/v1
tags:
  - name: Bare metal inventory
    description: Manage bare metal inventory

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json


paths:
  /images:
    post:
      tags:
        - inventory
      summary: Create an OpenShift bare metal cluster-assist installation image
      operationId: CreateImage
      parameters:
        - in: body
          name: new-image-params
          description: New image parameters
          required: true
          schema:
            $ref: '#/definitions/image-create-params'
      responses:
        201:
          description: Created image
          schema:
            $ref: '#/definitions/image'
        400:
          description: Invalid input
        500:
          description: Internal server error
    get:
      tags:
        - inventory
      summary: List installation images
      operationId: ListImages
      responses:
        200:
          description: Image list
          schema:
            $ref: '#/definitions/image-list'
        500:
          description: Internal server error

  /images/{image_id}:
    get:
      tags:
        - inventory
      summary: Retrieve installation image information
      operationId: GetImage
      parameters:
        - in: path
          name: image_id
          description: The ID of the image to retrieve
          type: string
          required: true
      responses:
        200:
          description: Image information
          schema:
            $ref: '#/definitions/image'
        404:
          description: Image not found

  /nodes:
    post:
      tags:
        - inventory
      summary: Register a new OpenShift bare metal node
      operationId: RegisterNode
      parameters:
        - in: body
          name: new-node-params
          description: New node parameters
          required: true
          schema:
            $ref: '#/definitions/node-create-params'
      responses:
        201:
          description: Registered node
          schema:
            $ref: '#/definitions/node'
        400:
          description: Invalid input
        500:
          description: Internal server error

    get:
      tags:
        - inventory
      summary: List OpenShift bare metal nodes
      operationId: ListNodes
      responses:
        200:
          description: Node list
          schema:
            $ref: '#/definitions/node-list'
        500:
          description: Internal server error

  /nodes/{node_id}:
    get:
      tags:
        - inventory
      summary: Retrieve OpenShift bare metal node information
      operationId: GetNode
      parameters:
        - in: path
          name: node_id
          description: The ID of the node to retrieve
          type: string
          required: true
      responses:
        200:
          description: Node information
          schema:
            $ref: '#/definitions/node'
        404:
          description: Node not found

    delete:
      tags:
        - inventory
      summary: Deregister OpenShift bare metal node
      operationId: DeregisterNode
      parameters:
        - in: path
          name: node_id
          description: The ID of the node to retrieve
          type: string
          required: true
      responses:
        204:
          description: Node deregistered
        400:
          description: Node in use
        404:
          description: Node not found

  /nodes/{node_id}/next-steps:
    get:
      tags:
        - inventory
      summary: Retrieve the next operations that the agent need to perform
      operationId: GetNextSteps
      parameters:
        - in: path
          name: node_id
          description: ID of node
          type: string
          required: true
      responses:
        200:
          description: Steps information
          schema:
            $ref: '#/definitions/steps'
        404:
          description: Node not found

  /nodes/{node_id}/next-steps/reply:
    post:
      tags:
        - inventory
      summary: Post the result of the required operations from the server
      operationId: PostNextStepsReply
      parameters:
        - in: path
          name: node_id
          description: ID of node
          type: string
          required: true
      responses:
        200:
          description: Steps reply
          schema:
            $ref: '#/definitions/steps-reply'
        404:
          description: Node not found

  /clusters:
    post:
      tags:
        - inventory
      summary: Register a new OpenShift bare metal cluster
      operationId: RegisterCluster
      parameters:
        - in: body
          name: new-cluster-params
          description: New cluster parameters
          required: true
          schema:
            $ref: '#/definitions/cluster-create-params'
      responses:
        201:
          description: Registered cluster
          schema:
            $ref: '#/definitions/cluster'
        400:
          description: Invalid input
        500:
          description: Internal server error

    get:
      tags:
        - inventory
      summary: List OpenShift bare metal clusters
      operationId: ListClusters
      responses:
        200:
          description: Cluster list
          schema:
            $ref: '#/definitions/cluster-list'
        500:
          description: Internal server error

  /clusters/{cluster_id}:
    get:
      tags:
        - inventory
      summary: Retrieve OpenShift bare metal cluster information
      operationId: GetCluster
      parameters:
        - in: path
          name: cluster_id
          description: The ID of the cluster to retrieve
          type: string
          required: true
      responses:
        200:
          description: Cluster information
          schema:
            $ref: '#/definitions/cluster'
        404:
          description: Cluster not found

    delete:
      tags:
        - inventory
      summary: Deregister OpenShift bare metal cluster
      operationId: DeregisterCluster
      parameters:
        - in: path
          name: cluster_id
          description: The ID of the cluster to retrieve
          type: string
          required: true
      responses:
        204:
          description: Cluster deregistered
        404:
          description: Cluster not found


definitions:
  base:
    type: object
    required:
      - kind
      - id
      - href
    properties:
      kind:
        type: string
        enum: ['image', 'node', 'cluster']
      id:
        type: string
        format: uuid
        x-go-custom-tag: gorm:"primary_key" query:"filter,sort"
      href:
        type: string
        format: uri

  image-create-params:
    type: object
    required:
      - name
      - namespace
    properties:
      name:
        type: string
      description:
        type: string
      namespace:
        type: string
      proxy_ip:
        type: string
        format: hostname
      proxy_port:
        type: integer
        minimum: 0
        maximum: 65535

  image:
    type: object
    allOf:
      - $ref: '#/definitions/base'
      - $ref: '#/definitions/image-create-params'
      - type: object
        required:
          - status
        properties:
          status:
            type: string
            enum: ['creating', 'ready', 'error']
          download_url:
            type: string
            format: uri

  image-list:
    type: array
    items:
      $ref: '#/definitions/image'

  node-create-params:
    type: object
    required:
      - namespace
      - hardware_info
      - serial
    properties:
      namespace:
        type: string
      hardware_info:
        type: string
        format: json
      serial:
        type: string

  node:
    type: object
    allOf:
      - $ref: '#/definitions/base'
      - $ref: '#/definitions/node-create-params'
      - type: object
        required:
          - kind
          - status
          - hardware_info
        properties:
          status:
            type: string
            enum: ['tbd']
          cluster_id:
            type: string
            format: uuid

  steps:
    type: array
    items:
      $ref: '#/definitions/step'

  step-type:
    type: string
    enum:
      - hardaware-info
      - connectivity-check

  step:
    type: object
    properties:
      step-type:
        $ref: '#/definitions/step-type'
      data:
        type: string
        format: json

  steps-reply:
    type: array
    items:
      $ref: '#/definitions/step-reply'

  step-reply:
    type: object
    properties:
      step-type:
        $ref: '#/definitions/step-type'
      return-code:
        type: integer
      data:
        type: string

  connectivity-check-params:
    type: array
    items:
      type: object
      properties:
        node-id:
          type: string
        nics:
          type: array
          items:
            type: object
            properties:
              mac:
                type: string
              ip-addresses:
                type: array
                items:
                  type: string

  node-list:
    type: array
    items:
      $ref: '#/definitions/node'

  cluster-create-params:
    type: object
    required:
      - name
      - nodes
    properties:
      name:
        type: string
      description:
        type: string
      nodes:
        type: array
        x-go-custom-tag: gorm:"type:varchar(64)[]"
        items:
          type: object
          properties:
            id:
              type: string
              format: uuid
            role:
              type: string
              enum: ['master', 'worker']

  cluster:
    type: object
    allOf:
      - $ref: '#/definitions/base'
      - $ref: '#/definitions/cluster-create-params'
      - type: object
        required:
          - status
          - namespace
        properties:
          namespace:
            type: string
          status:
            type: string
            enum: ['creating', 'ready', 'error']

  cluster-list:
    type: array
    items:
      $ref: '#/definitions/cluster'
