// Code generated by MockGen. DO NOT EDIT.
// Source: instructionmanager.go

// Package host is a generated GoMock package.
package host

import (
	context "context"
	models "github.com/filanov/bm-inventory/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInstructionMngApi is a mock of InstructionMngApi interface.
type MockInstructionMngApi struct {
	ctrl     *gomock.Controller
	recorder *MockInstructionMngApiMockRecorder
}

// MockInstructionMngApiMockRecorder is the mock recorder for MockInstructionMngApi.
type MockInstructionMngApiMockRecorder struct {
	mock *MockInstructionMngApi
}

// NewMockInstructionMngApi creates a new mock instance.
func NewMockInstructionMngApi(ctrl *gomock.Controller) *MockInstructionMngApi {
	mock := &MockInstructionMngApi{ctrl: ctrl}
	mock.recorder = &MockInstructionMngApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstructionMngApi) EXPECT() *MockInstructionMngApiMockRecorder {
	return m.recorder
}

// GetNextSteps mocks base method.
func (m *MockInstructionMngApi) GetNextSteps(ctx context.Context, host *models.Host) (models.Steps, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNextSteps", ctx, host)
	ret0, _ := ret[0].(models.Steps)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNextSteps indicates an expected call of GetNextSteps.
func (mr *MockInstructionMngApiMockRecorder) GetNextSteps(ctx, host interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNextSteps", reflect.TypeOf((*MockInstructionMngApi)(nil).GetNextSteps), ctx, host)
}
